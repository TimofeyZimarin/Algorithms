def destination(tables:list, oper:list):
    dest = oper[0] - 1
    while True:
        if dest == tables[dest][1] - 1:
            return dest
        else:
            dest = tables[dest][1] - 1

def source(tables:list, oper:list):
    sour = oper[1] - 1
    while True:
        if sour == tables[sour][1] - 1:
            return sour
        else:
            temp = sour
            sour = tables[sour][1] - 1
            tables[temp][1] = oper[0]

def adding(tables:list, oper:list, max:int):
    i = 0
    sour = oper[0][1] - 1
    dest = oper[0][0] - 1
    while i < len(oper):
        dest = destination(tables, oper[i])
        sour = source(tables, oper[i])
        tables[sour][1] = tables[dest][0]
        r = tables[sour][2]
        tables[sour][2] = 0
        tables[dest][2] += r
        if tables[dest][2] > max:
            max = tables[dest][2]
        print(max)
        i += 1
    print(tables)
def main():
    tables = []
    oper = []
    max = 0
    n, m = map(int, input().split())
    *sizes, = map(int, input().split())
    for i in range(m):
        *a, = map(int, input().split())
        oper.append(a)
    for i in range(len(sizes)):
        tables.append([i + 1, i + 1, sizes[i]])
        if max < sizes[i]:
            max = sizes[i]
    adding(tables, oper, max)

main()
